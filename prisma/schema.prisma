// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  role         Role          @default(Customer)
  password     String
  avatar       String?
  phone_number String        @unique
  address      String
  transactions Transaction[]
  carts        Cart[]
  products     Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String
  price            Int
  stock            Int
  image            String
  description      String?
  user_id          Int
  transactionItems TransactionItem[]
  carts            Cart[]

  user      User     @relation(fields: [user_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Cart {
  id         Int @id @default(autoincrement())
  user_id    Int
  product_id Int
  qty        Int

  user    User    @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carts")
}

model Transaction {
  id          Int    @id @default(autoincrement())
  user_id     Int
  platformFee Int
  grandTotal  Int
  status      Status @default(Pending)

  items TransactionItem[]

  user User @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("transactions")
}

model TransactionItem {
  id             Int   @id @default(autoincrement())
  transaction_id Int
  product_id     Int
  qty            Int
  price          Float
  subtotal       Float

  transaction Transaction @relation(fields: [transaction_id], references: [id])
  product     Product     @relation(fields: [product_id], references: [id])

  @@map("transaction_items")
}

enum Role {
  Customer
  Seller
}

enum Status {
  Pending
  Success
  Failed
}
